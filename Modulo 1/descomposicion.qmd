---
title: "Descomposición"
format: html
---

```{r}
library(tidyverse)
library(fpp3)
```

Vamos a importar los datos de las medicinas:


```{r}
# ALT + "-" para agregar " <- "
medicinas <- read_csv("datos/medicinas.csv")
medicinas
```

Tenemos que convertirla a una `tsibble`. Para ello, tenemos que primero cambiar el formato de la fecha a un objeto `yearmonth`:

```{r}
medicinas <- medicinas |>
  mutate(fecha = yearmonth(fecha)) |> 
  as_tsibble(index = fecha)

medicinas
```

Graficamos la serie

```{r}
medicinas |> 
  autoplot(Cost)
```

Como habíamos visto, la serie tiene una tendencia a la alza y un fuerte patrón estacional. Hacemos la descomposición clásica, tal como la hicimos en Excel:

```{r}
#| warning: false

medicinas_dcmp <- medicinas |>
  model(dcmp_clasica_mult = classical_decomposition(Cost, type = "multiplicative")) |>
  components()

medicinas_dcmp

medicinas_dcmp |> 
  ggplot(aes(y = Cost, x = fecha)) +
  geom_line(color = "grey") +
  geom_line(aes(y = season_adjust), color = "blue")

medicinas_dcmp |> 
  autoplot()
```

## Descomposición STL
```{r}
medicinas |> 
  autoplot(Cost)

medicinas |> 
  autoplot(log(Cost))

lambda_med <- medicinas |> 
  features(Cost, features = guerrero) |> 
  pull()

medicinas |> 
  autoplot(box_cox(Cost, lambda = lambda_med))
```

```{r}
medicinas_stl <- medicinas |>
  model(stl = STL(log(Cost) ~ trend(window = NULL) + season(window = "periodic"), robust = TRUE)) |>
  components()

medicinas_stl |> 
  autoplot()
```

Vamos a modificar manualmente un valor para convertirlo en outlier y ver cómo afecta a la descomposición:

```{r}
medicinas_mod <- medicinas

medicinas_mod$Cost[50] <- 3

medicinas_mod |> 
  autoplot(Cost)

medicinas_mod |> 
  model(stl = STL(log(Cost) ~ season(window = "periodic"), robust = TRUE)) |> 
  components() |> 
  autoplot()
```

